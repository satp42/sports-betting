version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: sports-betting-postgres
    environment:
      POSTGRES_DB: sports_betting
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: sports-betting-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: sports-betting-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  ray-head:
    image: rayproject/ray:2.46.0-py311
    container_name: sports-betting-ray-head
    command: >
      bash -c "
        ray start --head --dashboard-host=0.0.0.0 --dashboard-port=8265 --block
      "
    ports:
      - "8265:8265"
    environment:
      RAY_DISABLE_IMPORT_WARNING: 1
    healthcheck:
      test: ["CMD", "ray", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  ingest-worker:
    build:
      context: ./apps/workers/ingest
      dockerfile: Dockerfile
    container_name: sports-betting-ingest-worker
    depends_on:
      - postgres
      - kafka
    environment:
      - THE_ODDS_API_KEY=${THE_ODDS_API_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - KAFKA_BROKERS=kafka:9092
    restart: unless-stopped
    volumes:
      - ./apps/workers/ingest/src:/app/src:ro
    healthcheck:
      test: ["CMD", "pgrep", "-f", "node"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data: 